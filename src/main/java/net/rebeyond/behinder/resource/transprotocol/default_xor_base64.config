[{"encode":"private byte[] Encrypt(byte[] data) throws Exception\n{\n    String key=\"e45e329feb5d925b\";\n\tfor (int i = 0; i < data.length; i++) {\n\t\tdata[i] = (byte) ((data[i]) ^ (key.getBytes()[i + 1 & 15]));\n\t}\n\tbyte[] encrypted ;\n        Class baseCls;\n        try\n        {\n            baseCls=Class.forName(\"java.util.Base64\");\n            Object Encoder=baseCls.getMethod(\"getEncoder\", null).invoke(baseCls, null);\n            encrypted= (byte[]) Encoder.getClass().getMethod(\"encode\", new Class[]{byte[].class}).invoke(Encoder, new Object[]{data});\n        }\n        catch (Throwable error)\n        {\n            baseCls=Class.forName(\"sun.misc.BASE64Encoder\");\n            Object Encoder=baseCls.newInstance();\n            String result=(String) Encoder.getClass().getMethod(\"encode\",new Class[]{byte[].class}).invoke(Encoder, new Object[]{data});\n            result=result.replace(\"\\n\", \"\").replace(\"\\r\", \"\");\n            encrypted=result.getBytes();\n        }\n\treturn encrypted;\n}","name":"default_xor_base64","id":24,"decode":"private byte[] Decrypt(byte[] data) throws Exception\n{\n     byte[] decodebs;\n        Class baseCls ;\n                try{\n                    baseCls=Class.forName(\"java.util.Base64\");\n                    Object Decoder=baseCls.getMethod(\"getDecoder\", null).invoke(baseCls, null);\n                    decodebs=(byte[]) Decoder.getClass().getMethod(\"decode\", new Class[]{byte[].class}).invoke(Decoder, new Object[]{data});\n                }\n                catch (Throwable e)\n                {\n                    baseCls = Class.forName(\"sun.misc.BASE64Decoder\");\n                    Object Decoder=baseCls.newInstance();\n                    decodebs=(byte[]) Decoder.getClass().getMethod(\"decodeBuffer\",new Class[]{String.class}).invoke(Decoder, new Object[]{new String(data)});\n\n                }\n    String key=\"e45e329feb5d925b\";\n\tfor (int i = 0; i < decodebs.length; i++) {\n\t\tdecodebs[i] = (byte) ((decodebs[i]) ^ (key.getBytes()[i + 1 & 15]));\n\t}\n\treturn decodebs;\n}","type":"jsp"},{"encode":"function Encrypt($data)\n{\n    $key=\"e45e329feb5d925b\"; \n\tfor($i=0;$i<strlen($data);$i++) {\n    \t$data[$i] = $data[$i]^$key[$i+1&15]; \n    }\n    $bs=\"base64_\".\"encode\";\n\t$after=$bs($data.\"\");\n    return $after;\n}","name":"default_xor_base64","id":25,"decode":"function Decrypt($data)\n{\n    $key=\"e45e329feb5d925b\"; \n    $bs=\"base64_\".\"decode\";\n\t$after=$bs($data.\"\");\n\tfor($i=0;$i<strlen($after);$i++) {\n    \t$after[$i] = $after[$i]^$key[$i+1&15]; \n    }\n    return $after;\n}","type":"php"}]