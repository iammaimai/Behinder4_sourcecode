[{"encode":"    private byte[] Encrypt(byte[] data) throws Exception\n    {\n        String key=\"e45e329feb5d925b\";\n        //key=\"34192114c8d05df8\";\n        byte[] raw = key.getBytes(\"utf-8\");\n        javax.crypto.spec.SecretKeySpec skeySpec = new javax.crypto.spec.SecretKeySpec(raw, \"AES\");\n        javax.crypto.Cipher cipher =javax.crypto.Cipher.getInstance(\"AES/ECB/PKCS5Padding\");// \"绠楁硶/妯\u2033紡/琛ョ爜鏂瑰紡\"\n        cipher.init(javax.crypto.Cipher.ENCRYPT_MODE, skeySpec);\n        byte[] encrypted = cipher.doFinal(data);\n        Class baseCls;\n        try\n        {\n            baseCls=Class.forName(\"java.util.Base64\");\n            Object Encoder=baseCls.getMethod(\"getEncoder\", null).invoke(baseCls, null);\n            encrypted= (byte[]) Encoder.getClass().getMethod(\"encode\", new Class[]{byte[].class}).invoke(Encoder, new Object[]{encrypted});\n        }\n        catch (Throwable error)\n        {\n            baseCls=Class.forName(\"sun.misc.BASE64Encoder\");\n            Object Encoder=baseCls.newInstance();\n            String result=(String) Encoder.getClass().getMethod(\"encode\",new Class[]{byte[].class}).invoke(Encoder, new Object[]{encrypted});\n            result=result.replace(\"\\n\", \"\").replace(\"\\r\", \"\");\n            encrypted=result.getBytes();\n        }\n        //澧炲姞榄旀硶灏惧反\n        int magicNum=Integer.parseInt(key.substring(0,2),16)%16;\n\t\tjava.util.Random random=new java.util.Random();\n\t\tbyte[] buf=new byte[magicNum];\n\t\tfor (int i=0;i<buf.length;i++)\n\t\t{\n\t\t\tbuf[i]=(byte)random.nextInt(256);\n\t\t}\n        java.io.ByteArrayOutputStream output = new java.io.ByteArrayOutputStream();\n\t\toutput.write(encrypted);\n\t\toutput.write(buf);\n\t\treturn output.toByteArray();\n    }","name":"aes_with_magic","id":31,"decode":"private byte[] Decrypt(byte[] data) throws Exception\n{\n    String k=\"e45e329feb5d925b\";\n    int magicNum=Integer.parseInt(k.substring(0,2),16)%16; //鍙杕agic tail闀垮害\n    data=java.util.Arrays.copyOfRange(data,0,data.length-magicNum); //鎴帀magic tail\n    javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(\"AES/ECB/PKCS5Padding\");c.init(2,new javax.crypto.spec.SecretKeySpec(k.getBytes(),\"AES\"));\n    byte[] decodebs;\n    Class baseCls ;\n            try{\n                baseCls=Class.forName(\"java.util.Base64\");\n                Object Decoder=baseCls.getMethod(\"getDecoder\", null).invoke(baseCls, null);\n                decodebs=(byte[]) Decoder.getClass().getMethod(\"decode\", new Class[]{byte[].class}).invoke(Decoder, new Object[]{data});\n            }\n            catch (Throwable e)\n            {\n                baseCls = Class.forName(\"sun.misc.BASE64Decoder\");\n                Object Decoder=baseCls.newInstance();\n                decodebs=(byte[]) Decoder.getClass().getMethod(\"decodeBuffer\",new Class[]{String.class}).invoke(Decoder, new Object[]{new String(data)});\n\n            }\n    return c.doFinal(decodebs);\n}","type":"jsp"},{"encode":"    function Encrypt($data)\n    {\n        $key=\"e45e329feb5d925b\"; //璇ュ瘑閽ヤ负杩炴帴瀵嗙爜32浣峬d5鍊肩殑鍓�16浣嶏紝榛樿杩炴帴瀵嗙爜rebeyond\n        $encrypted=base64_encode(openssl_encrypt($data, \"AES-128-ECB\", $key,OPENSSL_PKCS1_PADDING));\n        $magicNum=hexdec(substr($key,0,2))%16; //鏍规嵁瀵嗛挜鍔ㄦ�佺\u2018瀹氶瓟娉曞熬宸寸殑闀垮害\n        for($i=0;$i<$magicNum;$i++)\n        {\n            $encrypted=$encrypted.chr(mt_rand(0, 255)); //鎷兼帴榄旀硶灏惧反\n        }\n        return $encrypted;\n    }","name":"aes_with_magic","id":32,"decode":"    function Decrypt($data)\n    {\n        $key=\"e45e329feb5d925b\"; //璇ュ瘑閽ヤ负杩炴帴瀵嗙爜32浣峬d5鍊肩殑鍓�16浣嶏紝榛樿杩炴帴瀵嗙爜rebeyond\n        $magicNum=hexdec(substr($key,0,2))%16; //鍙杕agic tail闀垮害\n        $data=substr($data,0,strlen($data)-$magicNum); //鎴帀magic tail\n        return openssl_decrypt(base64_decode($data), \"AES-128-ECB\", $key,OPENSSL_PKCS1_PADDING);\n    }","type":"php"}]